/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FoodUI;

import FoodController.FoodController;
import FoodModel.Food;
import NavigationController.NavController;
import java.awt.Dimension;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import javax.swing.JFrame;
import javax.swing.RowFilter;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author bryaningram
 */
public class FoodPanel extends javax.swing.JPanel {

    NavController navCtrl;
    FoodController foodCtrl;

    /**
     * Creates new form FoodPanel
     */
      @Override
    public Dimension getPreferredSize() {
        return new Dimension(360, 480);
    }
    public FoodPanel(FoodController foodCtrl) {
        this.foodCtrl = foodCtrl;
        initComponents();
        readFoodList();
    }

    public void readFoodList() {
        try {
            ArrayList<Food> foods = foodCtrl.viewFoodList();
            DefaultTableModel model = (DefaultTableModel) foodTable.getModel();
            model.setColumnIdentifiers(new String[]{"Food Consumed", "Type", "Description", "Timestamp"});
            for (int i = 0; i < foods.size(); i++) {
                Food food = foods.get(i);
                String[] data = {food.getName(), food.getType(), food.getDescription(), food.getTimestamp()};
                model.addRow(data);
            }
        } catch (Exception e) {
            System.out.println("Error has occurred in FoodPanel - readFoodList(): " + e);
        }
    }

    private void filter(String sort) {
        DefaultTableModel model = (DefaultTableModel) foodTable.getModel();
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<DefaultTableModel>(model);
        foodTable.setRowSorter(sorter);
        sorter.setRowFilter(RowFilter.regexFilter(sort));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        foodTable = new javax.swing.JTable();
        addFoodBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        filterText = new javax.swing.JTextField();
        deleteBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();

        jScrollPane1.setViewportView(foodTable);

        addFoodBtn.setText("Add Food");
        addFoodBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFoodBtnActionPerformed(evt);
            }
        });

        jLabel2.setText("Filter:");

        filterText.setColumns(8);
        filterText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                filterTextKeyReleased(evt);
            }
        });

        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 10, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addFoodBtn)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(filterText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(updateBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(deleteBtn)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(addFoodBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(filterText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteBtn)
                    .addComponent(updateBtn))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addFoodBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFoodBtnActionPerformed
        JFrame newFoodUI = new JFrame();
        newFoodUI.setBounds(0, 0, 360, 480);
        newFoodUI.setTitle("Create Profile");
        newFoodUI.setResizable(true);
        newFoodUI.setLocationRelativeTo(null);
        CreateFoodPanel foodPanel = new CreateFoodPanel(this.foodCtrl, newFoodUI);
        newFoodUI.add(foodPanel);
        newFoodUI.setVisible(true);
    }//GEN-LAST:event_addFoodBtnActionPerformed

    private void filterTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_filterTextKeyReleased
        String sort = filterText.getText();
        filter(sort);
    }//GEN-LAST:event_filterTextKeyReleased

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        int viewIndex = foodTable.getSelectedRow();
        if (viewIndex != -1) {
            int modelIndex = foodTable.convertRowIndexToModel(viewIndex); // converts the row index in the view to the appropriate index in the model
            DefaultTableModel table = (DefaultTableModel) foodTable.getModel();
            table.removeRow(modelIndex);

            try {
                File file = new File("Foods.txt");
                FileWriter fw = new FileWriter(file);
                BufferedWriter bw = new BufferedWriter(fw);

                for (int i = 0; i < foodTable.getRowCount(); i++) {
                    for (int j = 0; j < foodTable.getColumnCount(); j++) {
                        bw.write(foodTable.getModel().getValueAt(i, j) + "/");
                    }
                    bw.newLine();
                }
                bw.close();
                fw.close();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        try {
                File file = new File("Foods.txt");
                FileWriter fw = new FileWriter(file);
                BufferedWriter bw = new BufferedWriter(fw);

                for (int i = 0; i < foodTable.getRowCount(); i++) {
                    for (int j = 0; j < foodTable.getColumnCount(); j++) {
                        bw.write(foodTable.getModel().getValueAt(i, j) + "/");
                    }
                    bw.newLine();
                }
                bw.close();
                fw.close();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
    }//GEN-LAST:event_updateBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addFoodBtn;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JTextField filterText;
    public javax.swing.JTable foodTable;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables

}
